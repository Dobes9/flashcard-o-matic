{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","Decks/DecksList.js","Decks/DeckForm.js","Decks/CreateDeck.js","Cards/CardsList.js","Decks/ViewDeck.js","Cards/NotEnoughCards.js","Cards/StudySession.js","Decks/StudyDeck.js","Decks/EditDeck.js","Cards/CardForm.js","Cards/AddCard.js","Cards/EditCard.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","card","Number","cardId","updatedCard","DecksList","allDecks","history","useHistory","AbortController","listOfDecks","map","length","description","onClick","push","xmlns","width","height","fill","class","viewBox","d","fill-rule","window","confirm","go","append","DeckForm","handleCancel","useRouteMatch","path","params","initialFormData","useState","formData","setFormData","useEffect","then","handleFormChange","target","value","handleSubmit","onSubmit","htmlFor","type","onChange","placeholder","CreateDeck","aria-label","to","aria-current","CardsList","cardsInDeck","listOfCards","front","back","abortController","deleteCard","ViewDeck","selectedDeck","setSelectedDeck","deckFromAPI","loadDeck","abort","NotEnoughCards","StudySession","initialStudyState","count","study","setStudy","StudyDeck","EditDeck","CardForm","readCard","createCard","updateCard","rows","AddCard","EditCard","Layout","setAllDecks","decksFromAPI","loadDecks","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAaeA,MAXf,WACE,OACE,wBAAQC,UAAU,oBAAlB,SACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,mBAAGA,UAAU,OAAb,sDCGOC,MARf,WACE,OACE,qBAAKD,UAAU,WAAf,SACE,8C,QCDAE,EAAeC,mIAAYD,cAAgB,wBAK3CE,EAAU,IAAIC,QAapB,SAASC,EAAWC,GACqBA,EAA/BC,MACR,OAFwB,YACeD,EADf,W,SAkBXE,E,gFAAf,WAAyBC,EAAKC,GAA9B,eAAAC,EAAA,+EAE2BC,MAAMH,EAAKC,GAFtC,aAEUG,EAFV,QAGiBC,OAAS,KAAOD,EAASC,OAAS,KAHnD,sBAIY,IAAIC,MAAJ,UAAaF,EAASC,OAAtB,cAAkCD,EAASG,aAJvD,uBAMiBH,EAASI,OAN1B,6EAQuB,eAAf,KAAMC,KARd,uF,sBAmBO,SAAeC,EAAtB,kC,4CAAO,WAAyBC,GAAzB,eAAAT,EAAA,6DACCF,EADD,UACUR,EADV,gCAEQO,EAAUC,EAAK,CAAEW,WAFzB,oF,sBAeA,SAAeC,EAAtB,oC,4CAAO,WAA0Bf,EAAMc,GAAhC,iBAAAT,EAAA,6DACCF,EADD,UACUR,EADV,UAECS,EAAU,CACdY,OAAQ,OACRnB,UACAoB,KAAMC,KAAKC,UAAUpB,EAAWC,IAChCc,UANG,SAQQZ,EAAUC,EAAKC,GARvB,oF,sBAoBA,SAAegB,EAAtB,oC,4CAAO,WAAwBC,EAAQP,GAAhC,eAAAT,EAAA,6DACCF,EADD,UACUR,EADV,kBACgC0B,EADhC,0BAEQnB,EAAUC,EAAK,CAAEW,WAFzB,oF,sBAcA,SAAeQ,EAAtB,oC,4CAAO,WAA0BC,EAAaT,GAAvC,iBAAAT,EAAA,6DACCF,EADD,UACUR,EADV,kBACgC4B,EAAYC,GAD5C,iBAECpB,EAAU,CACdY,OAAQ,MACRnB,UACAoB,KAAMC,KAAKC,UAAUpB,EAAWwB,IAChCT,UANG,SAQQZ,EAAUC,EAAKC,GARvB,oF,sBAoBA,SAAeqB,EAAtB,oC,4CAAO,WAA0BJ,EAAQP,GAAlC,iBAAAT,EAAA,6DACCF,EADD,UACUR,EADV,kBACgC0B,GAC/BjB,EAAU,CAAEY,OAAQ,SAAUF,UAF/B,SAGQZ,EAAUC,EAAKC,GAHvB,oF,kEAgCA,WAA0BiB,EAAQK,EAAMZ,GAAxC,iBAAAT,EAAA,6DAGCF,EAHD,UAGUR,EAHV,UAIL+B,EAAKL,OAASM,OAAON,GACfjB,EAAU,CACdY,OAAQ,OACRnB,UACAoB,KAAMC,KAAKC,UAAUO,GACrBZ,UATG,SAWQZ,EAAUC,EAAKC,GAXvB,oF,kEAuBA,WAAwBwB,EAAQd,GAAhC,eAAAT,EAAA,6DACCF,EADD,UACUR,EADV,kBACgCiC,GADhC,SAEQ1B,EAAUC,EAAK,CAAEW,WAFzB,oF,kEAcA,WAA0Be,EAAaf,GAAvC,iBAAAT,EAAA,6DACCF,EADD,UACUR,EADV,kBACgCkC,EAAYL,IAC3CpB,EAAU,CACdY,OAAQ,MACRnB,UACAoB,KAAMC,KAAKC,UAAUU,IALlB,SAOQ3B,EAAUC,EAAKC,GAPvB,oF,kEAmBA,WAA0BwB,EAAQd,GAAlC,iBAAAT,EAAA,6DACCF,EADD,UACUR,EADV,kBACgCiC,GAC/BxB,EAAU,CAAEY,OAAQ,SAAUF,UAF/B,SAGQZ,EAAUC,EAAKC,GAHvB,oF,sBCpNQ,SAAS0B,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC5BC,EAAUC,cAEVnB,GADkB,IAAIoB,iBACGpB,OAEzBqB,EAAcJ,EAASK,KAAI,SAACpC,GAChC,OACE,sBAAKP,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBO,EAAKY,OAC3B,oBAAGnB,UAAU,mBAAb,UAAiCO,EAAKC,MAAMoC,OAA5C,eAEF,qBAAK5C,UAAU,YAAf,SAA4BO,EAAKsC,cACjC,sBAAK7C,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,yBACEA,UAAU,mCACV8C,QAAS,WACPP,EAAQQ,KAAR,iBAAuBxC,EAAKwB,MAHhC,UAME,sBACEiB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,iBACNC,QAAQ,YANV,UAQE,sBAAMC,EAAE,iDACR,sBAAMA,EAAE,mGACH,IAhBT,UAmBA,yBACEtD,UAAU,4BACV8C,QAAS,WACPP,EAAQQ,KAAR,iBAAuBxC,EAAKwB,GAA5B,YAHJ,UAME,sBACEiB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,8BACNC,QAAQ,YANV,UAQE,sBACEE,YAAU,UACVD,EAAE,sEAEJ,sBAAMA,EAAE,sJACR,sBAAMA,EAAE,yMACH,IApBT,cAwBF,qBAAKtD,UAAU,MAAf,SACE,wBACEA,UAAU,iCACV8C,QAAS,WACmBU,OAAOC,QAC/B,gEAGAzB,EAAWzB,EAAKwB,GAAIV,GACpBkB,EAAQmB,GAAG,KARjB,SAYE,sBACEV,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,cACNC,QAAQ,YANV,UAQE,sBAAMC,EAAE,oKACR,sBACEC,YAAU,UACVD,EAAE,2PA3Ea/C,EAAKwB,OAqFpC,OACE,gCACE,yBACE/B,UAAU,yBACV8C,QAAS,kBAAMP,EAAQQ,KAAK,eAF9B,UAIE,qBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,aACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,4GACH,IAbT,iBAgBCZ,KDxGPtC,EAAQuD,OAAO,eAAgB,oB,0BENhB,SAASC,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,aAC3BtB,EAAUC,cADiC,EAExBsB,cAAjBC,EAFyC,EAEzCA,KACAnC,EAHyC,EAEnCoC,OACNpC,OAEFqC,EAAkB,CACtB9C,KAAM,GACN0B,YAAa,IAPkC,EAUjBqB,mBAAS,eAAKD,IAVG,mBAU1CE,EAV0C,KAUhCC,EAVgC,KAa3C/C,GADkB,IAAIoB,iBACGpB,OAE/BgD,qBAAU,WACRzC,EACID,EAASC,EAAQP,GAAQiD,KAAKF,GAC9BA,EAAY,eAAKH,MACpB,CAACrC,IAEJ,IAAM2C,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1BJ,EAAY,2BACPD,GADM,kBAERK,EAAOrD,KAAOqD,EAAOC,UAIpBC,EAAY,uCAAG,sBAAA9D,EAAA,yDACV,eAATmD,EADmB,gCAETzC,EAAW6C,EAAU9C,GAFZ,6CAGTQ,EAAWsC,EAAU9C,GAHZ,2CAAH,qDAMlB,OACE,uBACEsD,SAAU,WACK,eAATZ,GACFW,IACAN,EAAY,eAAKH,IACjB1B,EAAQQ,KAAK,KAAKW,GAAG,KAErBgB,IACAN,EAAY,eAAKH,IACjB1B,EAAQQ,KAAR,iBAAuBnB,IAAU8B,GAAG,KAT1C,UAaE,qBAAK1D,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,aAAa4E,QAAQ,OAAtC,kBAGA,uBACE5E,UAAU,eACV+B,GAAG,OACHZ,KAAK,OACL0D,KAAK,OACLJ,MAAON,EAAShD,KAChB2D,SAAUP,EACVQ,YAAY,mBAIlB,qBAAK/E,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,aAAa4E,QAAQ,cAAtC,yBAGA,0BACE5E,UAAU,eACV+B,GAAG,cACHZ,KAAK,cACLsD,MAAON,EAAStB,YAChBiC,SAAUP,EACVQ,YAAY,uCAIlB,gCACE,wBACE/E,UAAU,oBACV8C,QAAS,WACPe,IACAO,EAAY,eAAKH,KAJrB,oBASA,wBAAQjE,UAAU,uBAAuB6E,KAAK,SAA9C,0BCzFO,SAASG,IACtB,IAAMzC,EAAUC,cAKhB,OACE,gCACE,qBAAKyC,aAAW,aAAhB,SACE,qBAAIjF,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAG,IAAT,oBAEF,oBAAIlF,UAAU,yBAAyBmF,eAAa,OAApD,8BAKJ,6CACA,cAACvB,EAAD,CAAUC,aAhBO,WACnBtB,EAAQQ,KAAK,WCJF,SAASqC,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAC5B9C,EAAUC,cACR9B,EAAQoD,cAARpD,IAEF4E,EAAcD,EAAY1C,KAAI,SAACV,GACnC,OACE,qBAAKjC,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,mBAAGA,UAAU,YAAb,SAA0BiC,EAAKsD,UAEjC,sBAAKvF,UAAU,MAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BiC,EAAKuD,OAC/B,sBAAKxF,UAAU,cAAf,UACE,yBACEA,UAAU,yBACV8C,QAAS,kBAAMP,EAAQQ,KAAR,UAAgBrC,EAAhB,kBAA6BuB,EAAKF,GAAlC,WAFjB,UAIE,qBACEiB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,oBACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,6bACH,IAbT,UAgBA,wBACEtD,UAAU,sBACV8C,QAAS,WAIP,GAH0BU,OAAOC,QAC/B,8DAEqB,CACrB,IAAMgC,EAAkB,IAAIhD,iBJ8K3C,SAAP,6BI7KsBiD,CAAWzD,EAAKF,GAAI0D,EAAgBpE,QACpCkB,EAAQmB,GAAG,KATjB,SAaE,sBACEV,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,cACNC,QAAQ,YANV,UAQE,sBAAMC,EAAE,oKACR,sBACEC,YAAU,UACVD,EAAE,gQAjDSrB,EAAKF,OA6DpC,OAAO,8BAAMuD,IClEA,SAASK,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBACzCtD,EAAUC,cAERZ,EADWkC,cAAXE,OACApC,OAuBR,OArBAyC,qBAAU,WACR,IAAMoB,EAAkB,IAAIhD,gBACtBpB,EAASoE,EAAgBpE,OAFjB,4CAId,4BAAAT,EAAA,sEAC4Be,EAASC,EAAQP,GAD7C,OACQyE,EADR,gBAKID,EAAgBC,GALpB,mDAOkB,eAAV,KAPR,sFAJc,sBAkBd,OAlBc,mCAgBdC,GAEO,kBAAMN,EAAgBO,WAC5B,CAACpE,IAGF,gCACE,qBAAKqD,aAAW,aAAhB,SACE,qBAAIjF,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAG,IAAT,oBAEF,oBAAIlF,UAAU,yBAAyBmF,eAAa,OAApD,SACGS,EAAazE,YAIpB,6BAAKyE,EAAazE,OAClB,4BAAIyE,EAAa/C,cACjB,sBAAK7C,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,yBACEA,UAAU,yBACV8C,QAAS,kBAAMP,EAAQQ,KAAR,iBAAuBnB,EAAvB,WAFjB,UAIE,qBACEoB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,oBACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,6bACH,IAbT,UAgBA,yBACEtD,UAAU,uBACV8C,QAAS,kBAAMP,EAAQQ,KAAR,iBAAuBnB,EAAvB,YAFjB,UAIE,sBACEoB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,8BACNC,QAAQ,YANV,UAQE,sBACEE,YAAU,UACVD,EAAE,sEAEJ,sBAAMA,EAAE,sJACR,sBAAMA,EAAE,yMACH,IAlBT,WAqBA,yBACEtD,UAAU,uBACV8C,QAAS,kBAAMP,EAAQQ,KAAR,iBAAuBnB,EAAvB,gBAFjB,UAIE,qBACEoB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,aACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,4GACH,IAbT,kBAiBF,qBAAKtD,UAAU,MAAf,SACE,wBACEA,UAAU,6BACV8C,QAAS,WAIP,GAH0BU,OAAOC,QAC/B,6DAEqB,CACrB,IAAMgC,EAAkB,IAAIhD,gBAC5BT,EAAWJ,EAAQ6D,EAAgBpE,QACnCkB,EAAQQ,KAAK,OATnB,SAaE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,cACNC,QAAQ,YANV,UAQE,sBAAMC,EAAE,oKACR,sBACEC,YAAU,UACVD,EAAE,yPAMZ,uCACA,cAAC8B,EAAD,CAAWC,YAAaO,EAAapF,WClI5B,SAASyF,EAAT,GAA0C,IAAhBZ,EAAe,EAAfA,YACjC9C,EAAUC,cAERZ,EADWkC,cAAXE,OACApC,OACR,OACE,gCACE,mDACA,+EACiDyD,EAAYzC,OAD7D,0BAIA,yBACE5C,UAAU,kBACV8C,QAAS,kBAAMP,EAAQQ,KAAR,iBAAuBnB,EAAvB,gBAFjB,UAIE,qBACEoB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,MAAM,aACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,4GACH,IAbT,kBCXS,SAAS4C,EAAT,GAAwC,IAAhBb,EAAe,EAAfA,YAC/B9C,EAAUC,cACV2D,EAAoB,CACxBC,MAAO,EACPb,OAAO,GAJ2C,EAO1BrB,mBAAS,eAAKiC,IAPY,mBAO7CE,EAP6C,KAOtCC,EAPsC,KASpD,OACE,qBAAKtG,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,kBACQqG,EAAMD,MADd,OACyBf,EAAYzC,UAErC,mBAAG5C,UAAU,YAAb,SACGqG,EAAMd,MACHF,EAAYgB,EAAMD,MAAQ,GAAGb,MAC7BF,EAAYgB,EAAMD,MAAQ,GAAGZ,OAEnC,gCACE,wBACExF,UAAU,oBACV8C,QAAS,kBACPwD,EAAS,2BACJD,GADG,IAENd,OAAQc,EAAMd,UALpB,kBAWCc,EAAMd,MAAQ,KACb,wBACEvF,UAAU,uBACV8C,QAAS,WACFuC,EAAYgB,EAAMD,OAQrBE,EAAS,CACPF,MAAOC,EAAMD,MAAQ,EACrBb,OAAO,IATc/B,OAAOC,QAC5B,gEAGE6C,EAAS,eAAKH,IACd5D,EAAQQ,KAAK,MATvB,0BC9BG,SAASwD,EAAT,GAAuD,IAAlCX,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAExCjE,EADWkC,cAAXE,OACApC,OAsBR,OApBAyC,qBAAU,WACR,IAAMoB,EAAkB,IAAIhD,gBACtBpB,EAASoE,EAAgBpE,OAFjB,4CAId,4BAAAT,EAAA,sEAC4Be,EAASC,EAAQP,GAD7C,OACQyE,EADR,gBAIID,EAAgBC,GAJpB,mDAMkB,eAAV,KANR,sFAJc,sBAiBd,OAjBc,mCAedC,GAEO,kBAAMN,EAAgBO,WAC5B,CAACpE,IAGF,gCACE,qBAAKqD,aAAW,aAAhB,SACE,qBAAIjF,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAG,IAAT,oBAEF,oBAAIlF,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAE,iBAAYtD,GAApB,SAA+BgE,EAAazE,SAE9C,oBAAInB,UAAU,yBAAyBmF,eAAa,OAApD,wBAKJ,+BAAKS,EAAazE,KAAlB,aACCyE,EAAapF,MAAMoC,OAAS,EAC3B,cAACqD,EAAD,CAAgBZ,YAAaO,EAAapF,QAE1C,cAAC0F,EAAD,CAAcb,YAAaO,EAAapF,WC7CjC,SAASgG,EAAT,GAAsD,IAAlCZ,EAAiC,EAAjCA,aAC3BrD,GAD4D,EAAnBsD,gBAC/BrD,eAERZ,EADWkC,cAAXE,OACApC,OAMR,OACE,gCACE,qBAAKqD,aAAW,aAAhB,SACE,qBAAIjF,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAG,IAAT,oBAEF,oBAAIlF,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAE,iBAAYtD,GAApB,SAA+BgE,EAAazE,SAE9C,oBAAInB,UAAU,yBAAyBmF,eAAa,OAApD,4BAKJ,2CACA,cAACvB,EAAD,CAAUC,aApBO,WACnBtB,EAAQQ,KAAR,iBAAuBnB,UCNZ,SAAS6E,IACtB,IAAMlE,EAAUC,cADiB,EAERsB,cAAjBC,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,OACNpC,EAAmBoC,EAAnBpC,OAAQO,EAAW6B,EAAX7B,OAEV8B,EAAkB,CACtBsB,MAAO,GACPC,KAAM,IAGFC,EAAkB,IAAIhD,gBACtBpB,EAASoE,EAAgBpE,OAXE,EAaD6C,mBAAS,IAbR,mBAa1BC,EAb0B,KAahBC,EAbgB,KAejCC,qBAAU,WAIR,OAHAlC,EVmKG,SAAP,oCUlKQuE,CAASvE,EAAQd,GAAQiD,KAAKF,GAC9BA,EAAY,eAAKH,IACd,kBAAMwB,EAAgBO,WAC5B,CAAC7D,IAEJ,IAAMoC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1BJ,EAAY,2BACPD,GADM,kBAERK,EAAOrD,KAAOqD,EAAOC,UAI1B,OACE,uBACEE,SAAU,WACJZ,IAAI,iBAAenC,EAAf,cV4HT,SAAP,sCU3HU+E,CAAW/E,EAAQuC,EAAU9C,GAAQiD,KACnCF,EAAY,eAAKH,KV+JtB,SAAP,oCU5JU2C,CAAWzC,GAAUG,KAAK/B,EAAQQ,KAAR,iBAAuBnB,MAPvD,UAaE,qBAAK5B,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,aAAa4E,QAAQ,QAAtC,mBAGA,0BACE5E,UAAU,eACV+B,GAAG,QACHZ,KAAK,QACLsD,MAAON,EAASoB,MAChBT,SAAUP,EACVQ,YAAY,qBACZ8B,KAAK,WAIX,qBAAK7G,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,aAAa4E,QAAQ,OAAtC,kBAGA,0BACE5E,UAAU,eACV+B,GAAG,OACHZ,KAAK,OACLsD,MAAON,EAASqB,KAChBV,SAAUP,EACVQ,YAAY,oBACZ8B,KAAK,WAID,6BAAT9C,EACC,gCACE,wBACE/D,UAAU,oBACV8C,QAAS,WACPsB,EAAY,eAAKH,IACjB1B,EAAQQ,KAAR,iBAAuBnB,IAAU8B,GAAG,IAJxC,kBASA,wBAAQ1D,UAAU,uBAAuB6E,KAAK,SAA9C,qBAKF,gCACE,wBACE7E,UAAU,oBACV8C,QAAS,WACPsB,EAAY,eAAKH,IACjB1B,EAAQQ,KAAR,iBAAuBnB,KAJ3B,oBASA,wBAAQ5B,UAAU,uBAAuB6E,KAAK,SAA9C,0BCpGK,SAASiC,EAAT,GAAqD,IAAlClB,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAEtCjE,EADWkC,cAAXE,OACApC,OAQR,OANAyC,qBAAU,WACR,IAAMoB,EAAkB,IAAIhD,gBAE5B,OADAd,EAASC,EAAQ6D,EAAgBpE,QAAQiD,KAAKuB,GACvC,kBAAMJ,EAAgBO,WAC5B,CAACpE,IAGF,gCACE,qBAAKqD,aAAW,aAAhB,SACE,qBAAIjF,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAG,IAAT,oBAEF,oBAAIlF,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAE,iBAAYtD,GAApB,SAA+BgE,EAAazE,SAE9C,oBAAInB,UAAU,yBAAyBmF,eAAa,OAApD,2BAKJ,+BAAKS,EAAazE,KAAlB,gBACA,cAACsF,EAAD,OC3BS,SAASM,EAAT,GAAqC,IAAjBnB,EAAgB,EAAhBA,aACzB5B,EAAWF,cAAXE,OACApC,EAAmBoC,EAAnBpC,OAAQO,EAAW6B,EAAX7B,OAEhB,OACE,gCACE,qBAAK8C,aAAW,aAAhB,SACE,qBAAIjF,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAG,IAAT,oBAEF,oBAAIlF,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMkF,GAAE,iBAAYtD,GAApB,SAA+BgE,EAAazE,SAE9C,qBAAInB,UAAU,yBAAyBmF,eAAa,OAApD,uBACahD,UAIjB,2CACA,cAACsE,EAAD,OCqDSO,MAhEf,WAAmB,IAAD,EACgB9C,mBAAS,IADzB,mBACT5B,EADS,KACC2E,EADD,OAEwB/C,mBAAS,CAAE1D,MAAO,KAF1C,mBAEToF,EAFS,KAEKC,EAFL,KAiBhB,OAbAxB,qBAAU,WACR,IAAMoB,EAAkB,IAAIhD,gBACtBpB,EAASoE,EAAgBpE,OAFjB,4CAId,4BAAAT,EAAA,sEAC6BQ,EAAUC,GADvC,OACQ6F,EADR,OAEED,EAAYC,GAFd,4CAJc,sBAUd,OAVc,mCAQdC,GAEO,kBAAM1B,EAAgBO,WAC5B,IAGD,gCACE,cAAC,EAAD,IACA,qBAAKhG,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoH,OAAK,EAACrD,KAAK,IAAlB,SACE,cAAC1B,EAAD,CAAWC,SAAUA,MAEvB,cAAC,IAAD,CAAOyB,KAAK,aAAZ,SACE,cAACiB,EAAD,MAEF,cAAC,IAAD,CAAOoC,OAAK,EAACrD,KAAK,iBAAlB,SACE,cAAC4B,EAAD,CACEC,aAAcA,EACdC,gBAAiBA,MAGrB,cAAC,IAAD,CAAO9B,KAAK,uBAAZ,SACE,cAACwC,EAAD,CACEX,aAAcA,EACdC,gBAAiBA,MAGrB,cAAC,IAAD,CAAO9B,KAAK,sBAAZ,SACE,cAACyC,EAAD,CACEZ,aAAcA,EACdC,gBAAiBA,MAGrB,cAAC,IAAD,CAAO9B,KAAK,2BAAZ,SACE,cAAC+C,EAAD,CACElB,aAAcA,EACdC,gBAAiBA,MAGrB,cAAC,IAAD,CAAO9B,KAAK,oCAAZ,SACE,cAACgD,EAAD,CAAUnB,aAAcA,MAE1B,cAAC,IAAD,UACE,cAAC,EAAD,eCjDGyB,MAZf,WACE,OACE,qBAAKrH,UAAU,aAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO+D,KAAK,IAAZ,SACE,cAAC,EAAD,WCRVuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b59e59a6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteDeck } from \"../utils/api/index\";\r\n\r\nexport default function DecksList({ allDecks }) {\r\n  const history = useHistory();\r\n  const abortController = new AbortController();\r\n  const signal = abortController.signal;\r\n\r\n  const listOfDecks = allDecks.map((deck) => {\r\n    return (\r\n      <div className=\"card\" key={deck.id}>\r\n        <div className=\"card-title\">\r\n          <h3 className=\"mx-3\">{deck.name}</h3>\r\n          <p className=\"float-right mx-3\">{deck.cards.length} cards</p>\r\n        </div>\r\n        <div className=\"card-body\">{deck.description}</div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <button\r\n              className=\"btn btn-secondary my-3 mx-1 ml-3\"\r\n              onClick={() => {\r\n                history.push(`/decks/${deck.id}`);\r\n              }}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-eye-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\r\n                <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\r\n              </svg>{\" \"}\r\n              View\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary my-3 mx-1\"\r\n              onClick={() => {\r\n                history.push(`/decks/${deck.id}/study`);\r\n              }}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-journal-bookmark-fill\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  d=\"M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8V1z\"\r\n                />\r\n                <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\" />\r\n                <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\" />\r\n              </svg>{\" \"}\r\n              Study\r\n            </button>\r\n          </div>\r\n          <div className=\"col\">\r\n            <button\r\n              className=\"btn btn-danger float-right m-3\"\r\n              onClick={() => {\r\n                const confirmDeleteDeck = window.confirm(\r\n                  \"Delete this deck? \\n \\nYou will not be able to recover it.\"\r\n                );\r\n                if (confirmDeleteDeck) {\r\n                  deleteDeck(deck.id, signal);\r\n                  history.go(0);\r\n                }\r\n              }}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                class=\"bi bi-trash\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn btn-secondary mb-2\"\r\n        onClick={() => history.push(\"/decks/new\")}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-plus\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n        </svg>{\" \"}\r\n        Create Deck\r\n      </button>\r\n      {listOfDecks}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { createDeck, updateDeck, readDeck } from \"../utils/api/index\";\r\n\r\nexport default function DeckForm({ handleCancel }) {\r\n  const history = useHistory();\r\n  const { path, params } = useRouteMatch();\r\n  const { deckId } = params;\r\n\r\n  const initialFormData = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState({ ...initialFormData });\r\n\r\n  const abortController = new AbortController();\r\n  const signal = abortController.signal;\r\n\r\n  useEffect(() => {\r\n    deckId\r\n      ? readDeck(deckId, signal).then(setFormData)\r\n      : setFormData({ ...initialFormData });\r\n  }, [deckId]);\r\n\r\n  const handleFormChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    path === \"/decks/new\"\r\n      ? await createDeck(formData, signal)\r\n      : await updateDeck(formData, signal);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={() => {\r\n        if (path === \"/decks/new\") {\r\n          handleSubmit();\r\n          setFormData({ ...initialFormData });\r\n          history.push(\"/\").go(0);\r\n        } else {\r\n          handleSubmit();\r\n          setFormData({ ...initialFormData });\r\n          history.push(`/decks/${deckId}`).go(0);\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-6 form-group\">\r\n          <label className=\"form-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={handleFormChange}\r\n            placeholder=\"Deck Name\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-6 form-group\">\r\n          <label className=\"form-label\" htmlFor=\"description\">\r\n            Description\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleFormChange}\r\n            placeholder=\"Brief description of the deck\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => {\r\n            handleCancel();\r\n            setFormData({ ...initialFormData });\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\";\r\n\r\nexport default function CreateDeck() {\r\n  const history = useHistory();\r\n\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Create Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>Create Deck</h2>\r\n      <DeckForm handleCancel={handleCancel} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { deleteCard } from \"../utils/api/index\";\r\n\r\nexport default function CardsList({ cardsInDeck }) {\r\n  const history = useHistory();\r\n  const { url } = useRouteMatch();\r\n\r\n  const listOfCards = cardsInDeck.map((card) => {\r\n    return (\r\n      <div className=\"card\" key={card.id}>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <p className=\"card-text\">{card.front}</p>\r\n            </div>\r\n            <div className=\"col\">\r\n              <p className=\"card-text\">{card.back}</p>\r\n              <div className=\"float-right\">\r\n                <button\r\n                  className=\"btn btn-secondary mx-1\"\r\n                  onClick={() => history.push(`${url}/cards/${card.id}/edit`)}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    class=\"bi bi-pencil-fill\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n                  </svg>{\" \"}\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger mx-1\"\r\n                  onClick={() => {\r\n                    const confirmDeleteCard = window.confirm(\r\n                      \"Delete this card? \\n \\nYou will not be able to recover it.\"\r\n                    );\r\n                    if (confirmDeleteCard) {\r\n                      const abortController = new AbortController();\r\n                      deleteCard(card.id, abortController.signal);\r\n                      history.go(0);\r\n                    }\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    class=\"bi bi-trash\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                    <path\r\n                      fill-rule=\"evenodd\"\r\n                      d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div>{listOfCards}</div>;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { readDeck, deleteDeck } from \"../utils/api/index\";\r\nimport CardsList from \"../Cards/CardsList\";\r\n\r\nexport default function ViewDeck({ selectedDeck, setSelectedDeck }) {\r\n  const history = useHistory();\r\n  const { params } = useRouteMatch();\r\n  const { deckId } = params;\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    async function loadDeck() {\r\n      const deckFromAPI = await readDeck(deckId, signal);\r\n      // console.log(\"useEffect\", deckFromAPI);\r\n\r\n      try {\r\n        setSelectedDeck(deckFromAPI);\r\n      } catch (error) {\r\n        if (error !== \"AbortError\") {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {selectedDeck.name}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h4>{selectedDeck.name}</h4>\r\n      <p>{selectedDeck.description}</p>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn btn-secondary mr-1\"\r\n            onClick={() => history.push(`/decks/${deckId}/edit`)}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-pencil-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\" />\r\n            </svg>{\" \"}\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mx-1\"\r\n            onClick={() => history.push(`/decks/${deckId}/study`)}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-journal-bookmark-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M6 1h6v7a.5.5 0 0 1-.757.429L9 7.083 6.757 8.43A.5.5 0 0 1 6 8V1z\"\r\n              />\r\n              <path d=\"M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z\" />\r\n              <path d=\"M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z\" />\r\n            </svg>{\" \"}\r\n            Study\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mx-1\"\r\n            onClick={() => history.push(`/decks/${deckId}/cards/new`)}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-plus\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n            </svg>{\" \"}\r\n            Add Cards\r\n          </button>\r\n        </div>\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn btn-danger float-right\"\r\n            onClick={() => {\r\n              const confirmDeleteDeck = window.confirm(\r\n                \"Delete this deck?\\n \\nYou will not be able to recover it.\"\r\n              );\r\n              if (confirmDeleteDeck) {\r\n                const abortController = new AbortController();\r\n                deleteDeck(deckId, abortController.signal);\r\n                history.push(\"/\");\r\n              }\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-trash\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <h3>Cards</h3>\r\n      <CardsList cardsInDeck={selectedDeck.cards} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function NotEnoughCards({ cardsInDeck }) {\r\n  const history = useHistory();\r\n  const { params } = useRouteMatch();\r\n  const { deckId } = params;\r\n  return (\r\n    <div>\r\n      <h3>Not enough cards.</h3>\r\n      <p>\r\n        You need at least 3 cards to study. There are {cardsInDeck.length} cards\r\n        in this deck.\r\n      </p>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={() => history.push(`/decks/${deckId}/cards/new`)}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          class=\"bi bi-plus\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n        </svg>{\" \"}\r\n        Add Cards\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StudySession({ cardsInDeck }) {\r\n  const history = useHistory();\r\n  const initialStudyState = {\r\n    count: 1,\r\n    front: true,\r\n  };\r\n\r\n  const [study, setStudy] = useState({ ...initialStudyState });\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">\r\n          Card {study.count} of {cardsInDeck.length}\r\n        </h4>\r\n        <p className=\"card-text\">\r\n          {study.front\r\n            ? cardsInDeck[study.count - 1].front\r\n            : cardsInDeck[study.count - 1].back}\r\n        </p>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() =>\r\n              setStudy({\r\n                ...study,\r\n                front: !study.front,\r\n              })\r\n            }\r\n          >\r\n            Flip\r\n          </button>\r\n          {study.front ? null : (\r\n            <button\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                if (!cardsInDeck[study.count]) {\r\n                  const confirmRestart = window.confirm(\r\n                    \"Restart cards?\\n\\nClick 'cancel' to return to the home page.\"\r\n                  );\r\n                  confirmRestart\r\n                    ? setStudy({ ...initialStudyState })\r\n                    : history.push(\"/\");\r\n                } else {\r\n                  setStudy({\r\n                    count: study.count + 1,\r\n                    front: true,\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useRouteMatch, Link } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api/index\";\r\nimport NotEnoughCards from \"../Cards/NotEnoughCards\";\r\nimport StudySession from \"../Cards/StudySession\";\r\n\r\nexport default function StudyDeck({ selectedDeck, setSelectedDeck }) {\r\n  const { params } = useRouteMatch();\r\n  const { deckId } = params;\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    async function loadDeck() {\r\n      const deckFromAPI = await readDeck(deckId, signal);\r\n\r\n      try {\r\n        setSelectedDeck(deckFromAPI);\r\n      } catch (error) {\r\n        if (error !== \"AbortError\") {\r\n          throw error;\r\n        }\r\n      }\r\n    }\r\n    loadDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{selectedDeck.name}</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Study\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>{selectedDeck.name}: Study</h2>\r\n      {selectedDeck.cards.length < 3 ? (\r\n        <NotEnoughCards cardsInDeck={selectedDeck.cards} />\r\n      ) : (\r\n        <StudySession cardsInDeck={selectedDeck.cards} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\";\r\n\r\nexport default function EditDeck({ selectedDeck, setSelectedDeck }) {\r\n  const history = useHistory();\r\n  const { params } = useRouteMatch();\r\n  const { deckId } = params;\r\n\r\n  const handleCancel = () => {\r\n    history.push(`/decks/${deckId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{selectedDeck.name}</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>Edit Deck</h2>\r\n      <DeckForm handleCancel={handleCancel} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { createCard, updateCard, readCard } from \"../utils/api/index\";\r\n\r\nexport default function CardForm() {\r\n  const history = useHistory();\r\n  const { path, params } = useRouteMatch();\r\n  const { deckId, cardId } = params;\r\n\r\n  const initialFormData = {\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n\r\n  const abortController = new AbortController();\r\n  const signal = abortController.signal;\r\n\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    cardId\r\n      ? readCard(cardId, signal).then(setFormData)\r\n      : setFormData({ ...initialFormData });\r\n    return () => abortController.abort();\r\n  }, [cardId]);\r\n\r\n  const handleFormChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={() => {\r\n        if (path === `/decks/${deckId}/cards/new`) {\r\n          createCard(deckId, formData, signal).then(\r\n            setFormData({ ...initialFormData })\r\n          );\r\n        } else {\r\n          updateCard(formData).then(history.push(`/decks/${deckId}`));\r\n          //setFormData({ ...initialFormData });\r\n          //history.push(`/decks/${deckId}`).go(0);\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-6 form-group\">\r\n          <label className=\"form-label\" htmlFor=\"front\">\r\n            Front\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"front\"\r\n            name=\"front\"\r\n            value={formData.front}\r\n            onChange={handleFormChange}\r\n            placeholder=\"Front side of card\"\r\n            rows=\"2\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-6 form-group\">\r\n          <label className=\"form-label\" htmlFor=\"back\">\r\n            Back\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"back\"\r\n            name=\"back\"\r\n            value={formData.back}\r\n            onChange={handleFormChange}\r\n            placeholder=\"Back side of card\"\r\n            rows=\"2\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {path === \"/decks/:deckId/cards/new\" ? (\r\n        <div>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => {\r\n              setFormData({ ...initialFormData });\r\n              history.push(`/decks/${deckId}`).go(0);\r\n            }}\r\n          >\r\n            Done\r\n          </button>\r\n          <button className=\"btn btn-primary mx-2\" type=\"submit\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => {\r\n              setFormData({ ...initialFormData });\r\n              history.push(`/decks/${deckId}`);\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button className=\"btn btn-primary mx-2\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\";\r\nimport { readDeck } from \"../utils/api\";\r\n\r\nexport default function AddCard({ selectedDeck, setSelectedDeck }) {\r\n  const { params } = useRouteMatch();\r\n  const { deckId } = params;\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setSelectedDeck);\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{selectedDeck.name}</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Add Card\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h3>{selectedDeck.name}: Add Card</h3>\r\n      <CardForm />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nexport default function EditCard({ selectedDeck }) {\r\n  const { params } = useRouteMatch();\r\n  const { deckId, cardId } = params;\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to={`/decks/${deckId}`}>{selectedDeck.name}</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit Card {cardId}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h2>Edit Card</h2>\r\n      <CardForm />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DecksList from \"../Decks/DecksList\";\nimport CreateDeck from \"../Decks/CreateDeck\";\nimport ViewDeck from \"../Decks/ViewDeck\";\nimport StudyDeck from \"../Decks/StudyDeck\";\nimport EditDeck from \"../Decks/EditDeck\";\nimport AddCard from \"../Cards/AddCard\";\nimport EditCard from \"../Cards/EditCard\";\nimport { listDecks } from \"../utils/api/index\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction Layout() {\n  const [allDecks, setAllDecks] = useState([]);\n  const [selectedDeck, setSelectedDeck] = useState({ cards: [] });\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function loadDecks() {\n      const decksFromAPI = await listDecks(signal);\n      setAllDecks(decksFromAPI);\n    }\n    loadDecks();\n\n    return () => abortController.abort();\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <DecksList allDecks={allDecks} />\n          </Route>\n          <Route path=\"/decks/new\">\n            <CreateDeck />\n          </Route>\n          <Route exact path=\"/decks/:deckId\">\n            <ViewDeck\n              selectedDeck={selectedDeck}\n              setSelectedDeck={setSelectedDeck}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <StudyDeck\n              selectedDeck={selectedDeck}\n              setSelectedDeck={setSelectedDeck}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck\n              selectedDeck={selectedDeck}\n              setSelectedDeck={setSelectedDeck}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard\n              selectedDeck={selectedDeck}\n              setSelectedDeck={setSelectedDeck}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard selectedDeck={selectedDeck} />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}